version: "3.9"

services:
  frontend:
    image: naborslov/vts-blog-frontend:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    ports:
      - "80:3000"
    depends_on:
      backend:
        condition: service_started

  backend:
    image: naborslov/vts-blog-backend:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      TIME_ZONE: ${TIME_ZONE}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  migration:
    image: naborslov/vts-blog-backend:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    build:
      dockerfile: backend_blog/Dockerfile
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      TIME_ZONE: ${TIME_ZONE}
    command: python manage.py migrate
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

