version: "3.9"

services:
  frontend:
    image: naborslov/vts-blog-frontend:test1
    build:
      dockerfile: frontend_blog/Dockerfile
    environment:
      BACKEND_HOST: http://backend:8000
    ports:
      - "80:3000"
    depends_on:
      backend:
        condition: service_started

  backend:
    image: naborslov/vts-blog-backend:test1
    build:
      dockerfile: backend_blog/Dockerfile
    environment:
      DEBUG: True
      SECRET_KEY: django-insecure-r^g0+=(70-)=-io*mw1et%1g!lo6btq=v_0snu+$7^#^9d^*yk
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: VTCBlog
      DB_PASSWORD: VTCBlog
      DB_NAME: VTCBlog
      TIME_ZONE: Asia/Yekaterinburg
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  migration:
    image: naborslov/vts-blog-backend:test1
    build:
      dockerfile: backend_blog/Dockerfile
    environment:
      DEBUG: True
      SECRET_KEY: django-insecure-r^g0+=(70-)=-io*mw1et%1g!lo6btq=v_0snu+$7^#^9d^*yk
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: VTCBlog
      DB_PASSWORD: VTCBlog
      DB_NAME: VTCBlog
      TIME_ZONE: Asia/Yekaterinburg
    command: python manage.py migrate
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.0
    environment:
      POSTGRES_DB: VTCBlog
      POSTGRES_USER: VTCBlog
      POSTGRES_PASSWORD: VTCBlog
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U VTCBlog -d VTCBlog'" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

